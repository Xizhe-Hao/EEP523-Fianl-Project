// Generated by view binder compiler. Do not edit!
package com.nutritionaljournal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.nutritionaljournal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMealDetailsBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final Button buttonCancel;

  @NonNull
  public final Button buttonSave;

  @NonNull
  public final MaterialButton buttonSearch;

  @NonNull
  public final ConstraintLayout contentLayout;

  @NonNull
  public final TextInputEditText editTextMealName;

  @NonNull
  public final TextInputEditText editTextNotes;

  @NonNull
  public final ImageView mapThumbnail;

  @NonNull
  public final ImageView mealImage;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView textCalories;

  @NonNull
  public final TextView textCaloriesLabel;

  @NonNull
  public final TextView textCarbs;

  @NonNull
  public final TextView textCarbsLabel;

  @NonNull
  public final TextView textFat;

  @NonNull
  public final TextView textFatLabel;

  @NonNull
  public final TextInputLayout textInputLayoutMealName;

  @NonNull
  public final TextInputLayout textInputLayoutNotes;

  @NonNull
  public final TextView textLocation;

  @NonNull
  public final TextView textLocationLabel;

  @NonNull
  public final TextView textNutritionalInfoLabel;

  @NonNull
  public final TextView textProtein;

  @NonNull
  public final TextView textProteinLabel;

  @NonNull
  public final TextView textTimestamp;

  @NonNull
  public final TextView textTimestampLabel;

  @NonNull
  public final Toolbar toolbar;

  private ActivityMealDetailsBinding(@NonNull CoordinatorLayout rootView,
      @NonNull Button buttonCancel, @NonNull Button buttonSave,
      @NonNull MaterialButton buttonSearch, @NonNull ConstraintLayout contentLayout,
      @NonNull TextInputEditText editTextMealName, @NonNull TextInputEditText editTextNotes,
      @NonNull ImageView mapThumbnail, @NonNull ImageView mealImage,
      @NonNull ProgressBar progressBar, @NonNull TextView textCalories,
      @NonNull TextView textCaloriesLabel, @NonNull TextView textCarbs,
      @NonNull TextView textCarbsLabel, @NonNull TextView textFat, @NonNull TextView textFatLabel,
      @NonNull TextInputLayout textInputLayoutMealName,
      @NonNull TextInputLayout textInputLayoutNotes, @NonNull TextView textLocation,
      @NonNull TextView textLocationLabel, @NonNull TextView textNutritionalInfoLabel,
      @NonNull TextView textProtein, @NonNull TextView textProteinLabel,
      @NonNull TextView textTimestamp, @NonNull TextView textTimestampLabel,
      @NonNull Toolbar toolbar) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonSave = buttonSave;
    this.buttonSearch = buttonSearch;
    this.contentLayout = contentLayout;
    this.editTextMealName = editTextMealName;
    this.editTextNotes = editTextNotes;
    this.mapThumbnail = mapThumbnail;
    this.mealImage = mealImage;
    this.progressBar = progressBar;
    this.textCalories = textCalories;
    this.textCaloriesLabel = textCaloriesLabel;
    this.textCarbs = textCarbs;
    this.textCarbsLabel = textCarbsLabel;
    this.textFat = textFat;
    this.textFatLabel = textFatLabel;
    this.textInputLayoutMealName = textInputLayoutMealName;
    this.textInputLayoutNotes = textInputLayoutNotes;
    this.textLocation = textLocation;
    this.textLocationLabel = textLocationLabel;
    this.textNutritionalInfoLabel = textNutritionalInfoLabel;
    this.textProtein = textProtein;
    this.textProteinLabel = textProteinLabel;
    this.textTimestamp = textTimestamp;
    this.textTimestampLabel = textTimestampLabel;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMealDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMealDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_meal_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMealDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCancel;
      Button buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.buttonSave;
      Button buttonSave = ViewBindings.findChildViewById(rootView, id);
      if (buttonSave == null) {
        break missingId;
      }

      id = R.id.buttonSearch;
      MaterialButton buttonSearch = ViewBindings.findChildViewById(rootView, id);
      if (buttonSearch == null) {
        break missingId;
      }

      id = R.id.contentLayout;
      ConstraintLayout contentLayout = ViewBindings.findChildViewById(rootView, id);
      if (contentLayout == null) {
        break missingId;
      }

      id = R.id.editTextMealName;
      TextInputEditText editTextMealName = ViewBindings.findChildViewById(rootView, id);
      if (editTextMealName == null) {
        break missingId;
      }

      id = R.id.editTextNotes;
      TextInputEditText editTextNotes = ViewBindings.findChildViewById(rootView, id);
      if (editTextNotes == null) {
        break missingId;
      }

      id = R.id.mapThumbnail;
      ImageView mapThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (mapThumbnail == null) {
        break missingId;
      }

      id = R.id.mealImage;
      ImageView mealImage = ViewBindings.findChildViewById(rootView, id);
      if (mealImage == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.textCalories;
      TextView textCalories = ViewBindings.findChildViewById(rootView, id);
      if (textCalories == null) {
        break missingId;
      }

      id = R.id.textCaloriesLabel;
      TextView textCaloriesLabel = ViewBindings.findChildViewById(rootView, id);
      if (textCaloriesLabel == null) {
        break missingId;
      }

      id = R.id.textCarbs;
      TextView textCarbs = ViewBindings.findChildViewById(rootView, id);
      if (textCarbs == null) {
        break missingId;
      }

      id = R.id.textCarbsLabel;
      TextView textCarbsLabel = ViewBindings.findChildViewById(rootView, id);
      if (textCarbsLabel == null) {
        break missingId;
      }

      id = R.id.textFat;
      TextView textFat = ViewBindings.findChildViewById(rootView, id);
      if (textFat == null) {
        break missingId;
      }

      id = R.id.textFatLabel;
      TextView textFatLabel = ViewBindings.findChildViewById(rootView, id);
      if (textFatLabel == null) {
        break missingId;
      }

      id = R.id.textInputLayoutMealName;
      TextInputLayout textInputLayoutMealName = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutMealName == null) {
        break missingId;
      }

      id = R.id.textInputLayoutNotes;
      TextInputLayout textInputLayoutNotes = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutNotes == null) {
        break missingId;
      }

      id = R.id.textLocation;
      TextView textLocation = ViewBindings.findChildViewById(rootView, id);
      if (textLocation == null) {
        break missingId;
      }

      id = R.id.textLocationLabel;
      TextView textLocationLabel = ViewBindings.findChildViewById(rootView, id);
      if (textLocationLabel == null) {
        break missingId;
      }

      id = R.id.textNutritionalInfoLabel;
      TextView textNutritionalInfoLabel = ViewBindings.findChildViewById(rootView, id);
      if (textNutritionalInfoLabel == null) {
        break missingId;
      }

      id = R.id.textProtein;
      TextView textProtein = ViewBindings.findChildViewById(rootView, id);
      if (textProtein == null) {
        break missingId;
      }

      id = R.id.textProteinLabel;
      TextView textProteinLabel = ViewBindings.findChildViewById(rootView, id);
      if (textProteinLabel == null) {
        break missingId;
      }

      id = R.id.textTimestamp;
      TextView textTimestamp = ViewBindings.findChildViewById(rootView, id);
      if (textTimestamp == null) {
        break missingId;
      }

      id = R.id.textTimestampLabel;
      TextView textTimestampLabel = ViewBindings.findChildViewById(rootView, id);
      if (textTimestampLabel == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new ActivityMealDetailsBinding((CoordinatorLayout) rootView, buttonCancel, buttonSave,
          buttonSearch, contentLayout, editTextMealName, editTextNotes, mapThumbnail, mealImage,
          progressBar, textCalories, textCaloriesLabel, textCarbs, textCarbsLabel, textFat,
          textFatLabel, textInputLayoutMealName, textInputLayoutNotes, textLocation,
          textLocationLabel, textNutritionalInfoLabel, textProtein, textProteinLabel, textTimestamp,
          textTimestampLabel, toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
