// Generated by view binder compiler. Do not edit!
package com.nutritionaljournal.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.nutritionaljournal.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemJournalMealBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView imageMealJournal;

  @NonNull
  public final TextView textMealCaloriesJournal;

  @NonNull
  public final TextView textMealLocationJournal;

  @NonNull
  public final TextView textMealTypeJournal;

  private ItemJournalMealBinding(@NonNull CardView rootView, @NonNull ImageView imageMealJournal,
      @NonNull TextView textMealCaloriesJournal, @NonNull TextView textMealLocationJournal,
      @NonNull TextView textMealTypeJournal) {
    this.rootView = rootView;
    this.imageMealJournal = imageMealJournal;
    this.textMealCaloriesJournal = textMealCaloriesJournal;
    this.textMealLocationJournal = textMealLocationJournal;
    this.textMealTypeJournal = textMealTypeJournal;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemJournalMealBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemJournalMealBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_journal_meal, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemJournalMealBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageMealJournal;
      ImageView imageMealJournal = ViewBindings.findChildViewById(rootView, id);
      if (imageMealJournal == null) {
        break missingId;
      }

      id = R.id.textMealCaloriesJournal;
      TextView textMealCaloriesJournal = ViewBindings.findChildViewById(rootView, id);
      if (textMealCaloriesJournal == null) {
        break missingId;
      }

      id = R.id.textMealLocationJournal;
      TextView textMealLocationJournal = ViewBindings.findChildViewById(rootView, id);
      if (textMealLocationJournal == null) {
        break missingId;
      }

      id = R.id.textMealTypeJournal;
      TextView textMealTypeJournal = ViewBindings.findChildViewById(rootView, id);
      if (textMealTypeJournal == null) {
        break missingId;
      }

      return new ItemJournalMealBinding((CardView) rootView, imageMealJournal,
          textMealCaloriesJournal, textMealLocationJournal, textMealTypeJournal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
